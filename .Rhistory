row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
isWin <- row$Amigos > row$Oponentes
for (j in 1:length(splited)) {
results[i, splited[j]] <- 1
results[i, "Win"] <- isWin
}
}
}
results[is.na(results)] <- 0
results
for (i in 1:nrow(df)) {
print(row$Amigos,  row$Oponentes)
if (row$Amigos == row$Oponentes)
next
}
df
for (i in 1:nrow(df)) {
print(row$Amigos,  row$Oponentes)
if (row$Amigos == row$Oponentes)
next
}
for (i in 1:nrow(df)) {
print(row$Amigos,  row$Oponentes)
if (row$Amigos == row$Oponentes)
next
}
setwd("C:\\Users\\bruno\\OneDrive - NuageIT\\Área de Trabalho\\Mineração de Dados\\T1---DM")
getwd()
df1 <- read.csv("./_ASSOC_BGFriends_01.csv")
df2 <- read.csv("./_ASSOC_BGFriends_02.csv")
df <- rbind(df1, df2)
names <- c()
for (i in 1:nrow(df)) {
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
names <- c(names, splited)
}
names <-unique(names)
names <-unique(names)
names
columns= c(unlist(names), "Win")
results = data.frame(matrix(nrow = 0, ncol = length(names)+1 ))
colnames(results) = columns
results
for (i in 1:nrow(df)) {
if (row$Amigos == row$Oponentes) {
next
}
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
isWin <- row$Amigos > row$Oponentes
for (j in 1:length(splited)) {
results[i, splited[j]] <- 1
results[i, "Win"] <- isWin
}
}
results[is.na(results)] <- 0
results
for (i in 1:nrow(df)) {
if (row$Amigos != row$Oponentes) {
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
isWin <- row$Amigos > row$Oponentes
for (j in 1:length(splited)) {
results[i, splited[j]] <- 1
results[i, "Win"] <- isWin
}
}
}
results[is.na(results)] <- 0
results
for (i in 1:nrow(df)) {
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
isWin <- row$Amigos > row$Oponentes
for (j in 1:length(splited)) {
results[i, splited[j]] <- 1
results[i, "Win"] <- isWin
}
}
results[is.na(results)] <- 0
results
for (i in 1:nrow(df)) {
if (as.numeric(row$Amigos) == as.numeric(row$Oponentes)) {
next
}
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
isWin <- row$Amigos > row$Oponentes
for (j in 1:length(splited)) {
results[i, splited[j]] <- 1
results[i, "Win"] <- isWin
}
}
results[is.na(results)] <- 0
results
dim(results)
install.packages("arules")
rules <- apriori(results,
parameter = list(supp = 0.1, conf = 0.9, target = "rules"))
library(arules)
rules <- apriori(results,
parameter = list(supp = 0.1, conf = 0.9, target = "rules"))
summary(rules)
results
rules <- apriori(results,
parameter = list(supp = 0.1, conf = 0.9, target = "rules"))
results
setwd("C:\\Users\\bruno\\OneDrive - NuageIT\\Área de Trabalho\\Mineração de Dados\\T1---DM")
df1 <- read.csv("./_ASSOC_BGFriends_01.csv")
df2 <- read.csv("./_ASSOC_BGFriends_02.csv")
df <- rbind(df1, df2)
names <- c()
for (i in 1:nrow(df)) {
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
names <- c(names, splited)
}
names <- levels(unique(names))
names
columns= c(levels(unlist(names)), "Win")
results = data.frame(matrix(nrow = 0, ncol = length(names)+1 ))
colnames(results) = columns
results
for (i in 1:nrow(df)) {
if (as.numeric(row$Amigos) == as.numeric(row$Oponentes)) {
next
}
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
isWin <- row$Amigos > row$Oponentes
for (j in 1:length(splited)) {
results[i, splited[j]] <- 1
results[i, "Win"] <- isWin
}
}
results[is.na(results)] <- 0
results
rules <- apriori(results,
parameter = list(supp = 0.1, conf = 0.9, target = "rules"))
names <- c()
for (i in 1:nrow(df)) {
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
names <- c(names, splited)
}
names <- unique(names)
names
columns= c(unlist(names), "Win")
results = data.frame(matrix(nrow = 0, ncol = length(names)+1 ))
colnames(results) = columns
results
for (i in 1:nrow(df)) {
if (as.numeric(row$Amigos) == as.numeric(row$Oponentes)) {
next
}
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
isWin <- row$Amigos > row$Oponentes
for (j in 1:length(splited)) {
results[i, splited[j]] <- 1
results[i, "Win"] <- isWin
}
}
results[is.na(results)] <- 0
results
rules <- apriori(results,
parameter = list(supp = 0.1, conf = 0.9, target = "rules"))
rules <- apriori(results,
parameter = list(supp = 0.1, conf = 0.9, target = "rules", maxlen = 153))
df <- rbind(df1, df2)
<- c()
names
names
df <- rbind(df1, df2)
names <- c()
for (i in 1:nrow(df)) {
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
names <- c(names, splited)
}
names <- levels(unique(names))
names
columns= c(levels(unlist(names)), "Win")
results = data.frame(matrix(nrow = 0, ncol = length(names)+1 ))
colnames(results) = columns
for (i in 1:nrow(df)) {
if (as.numeric(row$Amigos) == as.numeric(row$Oponentes)) {
next
}
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
isWin <- row$Amigos > row$Oponentes
for (j in 1:length(splited)) {
results[i, splited[j]] <- 1
results[i, "Win"] <- isWin
}
}
results[is.na(results)] <- 0
rules <- apriori(results,
parameter = list(supp = 0.1, conf = 0.9, target = "rules", maxlen = 153))
for (i in 1:nrow(df)) {
if (as.numeric(row$Amigos) == as.numeric(row$Oponentes)) {
next
}
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
isWin <- row$Amigos > row$Oponentes
for (j in 1:length(splited)) {
results[i, splited[j]] <- 1
results[i, "Win"] <- as.factor(isWin)
}
}
results[is.na(results)] <- 0
rules <- apriori(results,
parameter = list(supp = 0.1, conf = 0.9, target = "rules", maxlen = 153))
library(arules)
setwd("C:\\Users\\bruno\\OneDrive - NuageIT\\Área de Trabalho\\Mineração de Dados\\T1---DM")
df1 <- read.csv("./_ASSOC_BGFriends_01.csv", stringsAsFactors = TRUE)
df2 <- read.csv("./_ASSOC_BGFriends_02.csv", stringsAsFactors = TRUE)
df <- rbind(df1, df2)
names <- c()
for (i in 1:nrow(df)) {
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
names <- c(names, splited)
}
names <- levels(unique(names))
names
columns= c(levels(unlist(names)), "Win")
results = data.frame(matrix(nrow = 0, ncol = length(names)+1 ), , stringsAsFactors = TRUE)
colnames(results) = columns
for (i in 1:nrow(df)) {
if (as.numeric(row$Amigos) == as.numeric(row$Oponentes)) {
next
}
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
isWin <- row$Amigos > row$Oponentes
for (j in 1:length(splited)) {
results[i, splited[j]] <- 1
results[i, "Win"] <- isWin
}
}
results[is.na(results)] <- 0
rules <- apriori(results,
parameter = list(supp = 0.1, conf = 0.9, target = "rules", maxlen = 153))
summary(rules)
setwd("C:\\Users\\bruno\\OneDrive - NuageIT\\Área de Trabalho\\Mineração de Dados\\T1---DM")
df1 <- read.csv("./_ASSOC_BGFriends_01.csv", stringsAsFactors = TRUE)
df2 <- read.csv("./_ASSOC_BGFriends_02.csv", stringsAsFactors = TRUE)
df <- rbind(df1, df2)
names <- c()
for (i in 1:nrow(df)) {
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
names <- c(names, splited)
}
names <- levels(unique(names))
names
columns= c(levels(unlist(names)), "Win")
results = data.frame(matrix(nrow = 0, ncol = length(names)+1 ), stringsAsFactors = TRUE)
library(arules)
setwd("C:\\Users\\bruno\\OneDrive - NuageIT\\Área de Trabalho\\Mineração de Dados\\T1---DM")
df1 <- read.csv("./_ASSOC_BGFriends_01.csv", stringsAsFactors = TRUE)
df2 <- read.csv("./_ASSOC_BGFriends_02.csv", stringsAsFactors = TRUE)
df <- rbind(df1, df2)
names <- c()
for (i in 1:nrow(df)) {
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
names <- c(names, splited)
}
names <- levels(unique(names))
names
columns= c(levels(unlist(names)), "Win")
results = data.frame(matrix(nrow = 0, ncol = length(names)+1 ), stringsAsFactors = TRUE)
colnames(results) = columns
for (i in 1:nrow(df)) {
if (as.numeric(row$Amigos) == as.numeric(row$Oponentes)) {
next
}
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
isWin <- row$Amigos > row$Oponentes
for (j in 1:length(splited)) {
results[i, splited[j]] <- 1
results[i, "Win"] <- isWin
}
}
results[is.na(results)] <- 0
results
for (i in 1:nrow(df)) {
if (row$Amigos == row$Oponentes) {
next
}
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
isWin <- row$Amigos > row$Oponentes
for (j in 1:length(splited)) {
results[i, splited[j]] <- 1
results[i, "Win"] <- isWin
}
}
results[is.na(results)] <- 0
results
rules <- apriori(results,
parameter = list(supp = 0.1, conf = 0.9, target = "rules", maxlen = 153))
summary(rules)
results
rules <- apriori(results,
parameter = list(supp = 0.1, conf = 0.9, target = "rules", maxlen = 153))
setwd("C:\\Users\\bruno\\OneDrive - NuageIT\\Área de Trabalho\\Mineração de Dados\\T1---DM")
df1 <- read.csv("./_ASSOC_BGFriends_01.csv", stringsAsFactors = TRUE)
df2 <- read.csv("./_ASSOC_BGFriends_02.csv", stringsAsFactors = TRUE)
df <- rbind(df1, df2)
names <- c()
for (i in 1:nrow(df)) {
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
names <- c(names, splited)
}
names <- unique(names)
names
columns= c(unlist(names), "Win")
results = data.frame(matrix(nrow = 0, ncol = length(names)+1 ), stringsAsFactors = TRUE)
colnames(results) = columns
for (i in 1:nrow(df)) {
if (as.numeric(row$Amigos) == as.numeric(row$Oponentes)) {
next
}
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
isWin <- row$Amigos > row$Oponentes
for (j in 1:length(splited)) {
results[i, splited[j]] <- 1
results[i, "Win"] <- isWin
}
}
results[is.na(results)] <- 0
results
for (i in 1:nrow(df)) {
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
isWin <- row$Amigos > row$Oponentes
for (j in 1:length(splited)) {
results[i, splited[j]] <- 1
results[i, "Win"] <- isWin
}
}
results[is.na(results)] <- 0
results
rules <- apriori(results,
parameter = list(supp = 0.1, conf = 0.9, target = "rules", maxlen = 153))
setwd("C:\\Users\\bruno\\OneDrive - NuageIT\\Área de Trabalho\\Mineração de Dados\\T1---DM")
df1 <- read.csv("./_ASSOC_BGFriends_01.csv")
df2 <- read.csv("./_ASSOC_BGFriends_02.csv")
df <- rbind(df1, df2)
names <- c()
for (i in 1:nrow(df)) {
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
names <- c(names, splited)
}
names <- levels(unique(names))
names
columns= c(levels(unlist(names)), "Win")
results = data.frame(matrix(nrow = 0, ncol = length(names)+1 ))
colnames(results) = columns
for (i in 1:nrow(df)) {
if (as.numeric(row$Amigos) == as.numeric(row$Oponentes)) {
next
}
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
isWin <- row$Amigos > row$Oponentes
for (j in 1:length(splited)) {
results[i, splited[j]] <- 1
results[i, "Win"] <- isWin
}
}
results[is.na(results)] <- 0
results
names <- unique(names)
names
columns= c(levels(unlist(names)), "Win")
results = data.frame(matrix(nrow = 0, ncol = length(names)+1 ))
colnames(results) = columns
for (i in 1:nrow(df)) {
if (as.numeric(row$Amigos) == as.numeric(row$Oponentes)) {
next
}
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
isWin <- row$Amigos > row$Oponentes
for (j in 1:length(splited)) {
results[i, splited[j]] <- 1
results[i, "Win"] <- isWin
}
}
results[is.na(results)] <- 0
results
rules <- apriori(results,
parameter = list(supp = 0.1, conf = 0.9, target = "rules", maxlen = 153))
names <- unique(names)
names
columns= c(unlist(names), "Win")
results = data.frame(matrix(nrow = 0, ncol = length(names)+1 ))
colnames(results) = columns
for (i in 1:nrow(df)) {
if (as.numeric(row$Amigos) == as.numeric(row$Oponentes)) {
next
}
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
isWin <- row$Amigos > row$Oponentes
for (j in 1:length(splited)) {
results[i, splited[j]] <- 1
results[i, "Win"] <- isWin
}
}
results[is.na(results)] <- 0
results
rules <- apriori(results,
parameter = list(supp = 0.1, conf = 0.9, target = "rules", maxlen = 153))
setwd("C:\\Users\\bruno\\OneDrive - NuageIT\\Área de Trabalho\\Mineração de Dados\\T1---DM")
df1 <- read.csv("./_ASSOC_BGFriends_01.csv")
df2 <- read.csv("./_ASSOC_BGFriends_02.csv")
df <- rbind(df1, df2)
names <- c()
for (i in 1:nrow(df)) {
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
names <- c(names, splited)
}
names <- levels(unique(names))
names
columns= c(levels(unlist(names)), "Win")
results = data.frame(matrix(nrow = 0, ncol = length(names)+1 ))
colnames(results) = columns
for (i in 1:nrow(df)) {
if (as.numeric(row$Amigos) == as.numeric(row$Oponentes)) {
next
}
row <- df[i,]
row$Jogadore.a.s <- str_replace_all(row$Jogadore.a.s,"\xe7", "ç")
name <- iconv(tolower(gsub(" ","", row$Jogadore.a.s)), to = "ASCII//TRANSLIT")
splited <- unlist(strsplit(name, split = ","))
isWin <- row$Amigos > row$Oponentes
for (j in 1:length(splited)) {
results[i, splited[j]] <- 1
results[i, "Win"] <- isWin
}
}
results[is.na(results)] <- 0
rules <- apriori(results,
parameter = list(supp = 0.1, conf = 0.9, target = "rules", maxlen = 153))
results
